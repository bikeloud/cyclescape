%article.message{id: "message-#{message.id}"}
  .details
    .author
      - if permitted_to? :view_profile, message.created_by
        %span.thumbnail
          - if message.created_by.profile.picture
            = image_tag message.created_by.profile.picture_thumbnail.url, alt: ""
        %span.name
          = link_to_profile message.created_by
      - else
        %span.thumbnail
        %span.name
          = message.created_by.display_name_or_anon
      = t '.committee' if message.committee_created?
      = link_to thread_path(message.thread_id, anchor: dom_id(message)), class: "permalink" do
        = t ".posted_date"
        = time_tag_with_title(message.created_at)
  .body
    - if message.censored?
      .censored
        %p= t ".censored"
    - else
      - if message.component
        = render "message/#{message_controller_map(message.component)}/show", message: message
      .header-fix{id: dom_id(message)}
      .message-text
        - display_message = sanitize(message_linkify(message))
        - if message.component || message.plain_text?
          - display_message = simple_format(display_message, sanitize: false)
        = auto_link(display_message)

      - message_or_component = message.component || message
      - if message_or_component.action_messages.to_a.present?
        = render "shared/resolves_actions", actions: message_or_component.action_messages
  - if permitted_to?([:censor], message) || library_type_for(message)
    %menu.tools
      %ul
        - if permitted_to?(:censor, message)
          %li= link_to t(".censor"), censor_thread_message_path(thread, message), method: :put
        - case library_type_for(message)
        - when "note"
          %li= link_to t(".create_note"), new_thread_message_note_path(thread, message)
        - when "document"
          %li= link_to t(".create_document"), new_thread_message_document_path(thread, message)
  %section.voting
    =render partial: "shared/votable",
      locals: { resource: message }
